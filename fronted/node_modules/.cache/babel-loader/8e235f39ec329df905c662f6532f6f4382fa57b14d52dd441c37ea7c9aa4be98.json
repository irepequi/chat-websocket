{"ast":null,"code":"var _jsxFileName = \"/Volumes/Extreme SSD/Trabajo/PORTFOLIO/Dev/chat-websockets/fronted/src/components/Chat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const socketRef = useRef(null);\n  useEffect(() => {\n    // Crear la conexión WebSocket\n    const socket = new WebSocket(\"ws://localhost:8080\");\n    socketRef.current = socket;\n    socket.onopen = () => console.log(\"Conexión WebSocket establecida\");\n    socket.onmessage = event => {\n      setMessages(prevMessages => [...prevMessages, {\n        source: \"server\",\n        content: event.data\n      }]);\n    };\n    socket.onerror = error => console.error(\"Error en WebSocket:\", error);\n    socket.onclose = () => console.log(\"Conexión WebSocket cerrada\");\n\n    // Cleanup\n    return () => {\n      socket.close();\n      console.log(\"Conexión WebSocket cerrada desde cleanup\");\n    };\n  }, []);\n\n  /**\n   * Envía un mensaje mediante una conexión de socket, si el socket está disponible.\n   * @param message: es el contenido que se transmitirá.\n   */\n  const sendMessage = () => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(inputValue);\n      setMessages(prevMessages => [...prevMessages, {\n        source: \"client\",\n        content: inputValue\n      }]);\n      setInputValue(\"\");\n    } else {\n      console.warn(\"WebSocket no está listo para enviar mensajes.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.source === \"server\" ? \"server\" : \"client\"}`,\n        children: msg.content\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"Escribe un mensaje...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"roYz3oCRju+RBaEDQ8kBiGvuTto=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","_s","messages","setMessages","inputValue","setInputValue","socketRef","socket","WebSocket","current","onopen","console","log","onmessage","event","prevMessages","source","content","data","onerror","error","onclose","close","sendMessage","readyState","OPEN","send","warn","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Volumes/Extreme SSD/Trabajo/PORTFOLIO/Dev/chat-websockets/fronted/src/components/Chat/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./Chat.scss\";\n\nconst Chat = () => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const socketRef = useRef(null);\n\nuseEffect(() => {\n  // Crear la conexión WebSocket\n  const socket = new WebSocket(\"ws://localhost:8080\");\n  socketRef.current = socket;\n\n  socket.onopen = () => console.log(\"Conexión WebSocket establecida\");\n\n  socket.onmessage = (event) => {\n    setMessages((prevMessages) => [\n      ...prevMessages,\n      { source: \"server\", content: event.data },\n    ]);\n  };\n\n  socket.onerror = (error) => console.error(\"Error en WebSocket:\", error);\n\n  socket.onclose = () => console.log(\"Conexión WebSocket cerrada\");\n\n  // Cleanup\n  return () => {\n    socket.close();\n    console.log(\"Conexión WebSocket cerrada desde cleanup\");\n  };\n}, []);\n\n  /**\n   * Envía un mensaje mediante una conexión de socket, si el socket está disponible.\n   * @param message: es el contenido que se transmitirá.\n   */\n  const sendMessage = () => {\n    if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {\n      socketRef.current.send(inputValue);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { source: \"client\", content: inputValue },\n      ]);\n      setInputValue(\"\");\n    } else {\n      console.warn(\"WebSocket no está listo para enviar mensajes.\");\n    }\n  };\n\n  return (\n    <div className=\"chat\">\n      <div className=\"messages\">\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={`message ${\n              msg.source === \"server\" ? \"server\" : \"client\"\n            }`}\n          >\n            {msg.content}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"text\"\n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          placeholder=\"Escribe un mensaje...\"\n        />\n        <button onClick={sendMessage}>Enviar</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}